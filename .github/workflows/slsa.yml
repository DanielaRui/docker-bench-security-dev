name: SLSA

on:
  push:
  release:
    permissions:
      contents: write
    types: [published, released]

permissions:
  actions: read
  contents: write
  id-token: write
jobs:
  build:
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142
        with:
          egress-policy: audit

      - name: Set REPOSITORY_NAME
        run: echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build artifacts
        run: |
          find *.sh functions/* tests/* Dockerfile Vagrantfile \
            -exec sha256sum {} \; > ${{ env.REPOSITORY_NAME }}.sha256

      - name: Generate hashes
        id: hash
        run: |
          echo "hashes=$(base64 -i ${{ env.REPOSITORY_NAME }}.sha256 | tr -d '\n')" >> "$GITHUB_OUTPUT"

      - name: Upload hashes file
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPOSITORY_NAME }}.sha256
          path: ${{ env.REPOSITORY_NAME }}.sha256
          if-no-files-found: error
          retention-days: 5

  provenance:
    needs: [build]
    uses: ./.github/workflows/provenance.yml
    with:
      base64-subjects: ${{ needs.build.outputs.hashes }}
      upload-assets: ${{ startsWith(github.ref, 'refs/tags/') }}
      generator-name: "docker-bench-security"

  release:
    needs: [build]
    permissions:
      actions: read
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Set REPOSITORY_NAME
        run: echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print Substr(${{ github.repository }},slash,last)}')" >> $GITHUB_ENV

      - name: Download hashes artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.REPOSITORY_NAME }}.sha256

      - name: Upload asset to GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.REPOSITORY_NAME }}.sha256
